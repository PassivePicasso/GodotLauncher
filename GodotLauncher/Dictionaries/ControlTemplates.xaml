<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate x:Key="SimpleTextBox" TargetType="TextBox">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer x:Name="PART_ContentHost" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseDirectlyOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource StandardForegroundBrush}"/>
                <Setter Property="SelectionBrush" Value="{DynamicResource SelectionHighlightBrush}"/>
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource StandardForegroundBrush}"/>
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                <Setter Property="IsHitTestVisible" Value="False"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TabControlTabItemTemplate" TargetType="TabItem">
        <Border x:Name="TabContent" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" >
            <TextBlock x:Name="Text" Text="{TemplateBinding Header}" VerticalAlignment="Center" HorizontalAlignment="Center" Background="{TemplateBinding Background}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="TabContent" Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="StandardButtonTemplate" TargetType="Button">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Border x:Name="Border" Grid.ColumnSpan="2"  BorderThickness="1,0,1,0" Background="{TemplateBinding Background}"
                HorizontalAlignment="Stretch">
            <Path x:Name="Arrow" Grid.Column="1" 
                HorizontalAlignment="Right" VerticalAlignment="Center" 
                    Margin="0,0,5,0"
                Data="M 0 0 L 4 4 L 8 0 Z" 
                Fill="{TemplateBinding Foreground}"/>
        </Border>
    </ControlTemplate>


    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Border x:Name="RootBorder" BorderThickness="1" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                Background="{TemplateBinding Background}">
            <Grid>
                <ToggleButton x:Name="ToggleButton"
                            Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            Template="{StaticResource ComboBoxToggleButton}"
                            HorizontalAlignment="Stretch"
                            Focusable="false"
                            ClickMode="Press"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Panel.ZIndex="2"
                            />
                <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Left"
                            Panel.ZIndex="3"
                            />

                <Popup x:Name="Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsDropDownOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Slide"
                       HorizontalOffset="-2"
                       >
                    <Border x:Name="PopupBorder" BorderThickness="1" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}">
                        <Grid x:Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}"
                              Background="{TemplateBinding Background}">
                            <Border x:Name="DropDownBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

                            <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,4,0,0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ExpansionToggleTemplate" TargetType="ToggleButton">
        <Border Width="12" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}">
            <Path x:Name="Arrow" 
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="4,1,0,0"
                  Data="M 0 0 L -4 4 L 0 8 Z" 
                  Stroke="{TemplateBinding Foreground}"
                  Fill="{TemplateBinding Foreground}"
                  />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 4 4 L 0 8 Z"/>
                <Setter TargetName="Arrow" Property="Margin" Value="1,1,0,0"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>